{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","changeReverse","NONE","sortType","setSortType","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","isNotDefault","className","type","classNames","onClick","ALPHABET","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiDKA,E,0EA5CQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAkCGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAxCD,SACLC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAEzB,OAAQH,GACN,IAAM,WACJE,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAME,cAAcD,MACtB,MACF,IAAM,SACJJ,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMG,OAASF,EAAME,UAc3B,OAPIX,GACFK,EAAaO,UAIfC,QAAQC,IAAIX,EAAUH,GAEfK,EAYcU,CACnBlB,EACAM,EACAH,GAEIgB,EAAehB,GAA4B,SAAbG,EAmBpC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAyB,aAAbhB,IAEhBiB,QAtBgB,WACtBhB,EAAYR,EAASyB,WAejB,iCAWA,wBACEH,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAyB,WAAbhB,IAEhBiB,QA7Bc,WACpBhB,EAAYR,EAAS0B,SAsBjB,4BAWA,wBACEJ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QAhDQ,WACdnB,GAAeD,IAyCX,qBAWCgB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CI,WACZhB,EAAYR,EAASM,MACrBD,GAAc,IAwCR,sBAWJ,6BACE,6BACGI,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCpInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bedb3015.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case ('Alphabet'):\n      visibleGoods.sort((good1, good2) => (\n        good1.localeCompare(good2)));\n      break;\n    case ('Length'):\n      visibleGoods.sort((good1, good2) => (\n        good1.length - good2.length));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nenum SortType {\n  NONE = 'None',\n  ALPHABET = 'Alphabet',\n  LENGTH = 'Length',\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, changeReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n  const isNotDefault = isReversed || (sortType !== 'None');\n\n  const reverse = () => {\n    changeReverse(!isReversed);\n  };\n\n  const setAlphabetSort = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const setLengthSort = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    changeReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== 'Alphabet' },\n          )}\n          onClick={setAlphabetSort}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== 'Length' },\n          )}\n          onClick={setLengthSort}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isNotDefault && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}